name: 'pr-downstream'
description: 'Create and merge downstream PR'
inputs:
  token:
    description: 'Github token with enough access rights'
    required: true
  repo:
    description: 'Repo to create PR'
    required: false
    default: 'worldr/gitops'
  branch:
    description: 'Branch to create pr in'
    required: false
    default: "main"
  change:
    description: 'What do we want to change in target repo'
    required: true
  merge:
    description: 'Do we want to merge the PR?'
    required: false
    default: "true"
  title:
    description: 'PR title'
    required: true
  body:
    description: 'PR body'
    required: true
  label:
    description: 'PR label'
    required: false
    default: "automation"
  working_directory:
    description: "Target repo local path"
    required: true
  user_name:
    description: "Git user.name value"
    required: false
    default: "ci"
  user_email:
    description: "Git user.email"
    required: false
    default: "ci@cd.automation"
  commit_message:
    description: "Commit message for auto commit"
    required: false
    default: "auto-commit"
runs:
  using: "composite"
  steps:
    - run:  gh auth status
      shell: bash
      env:
        GH_TOKEN: "${{ inputs.token }}"
    - run:  ${{ inputs.change }}
      shell: bash
      working-directory: "${{inputs.working_directory}}"
      env:
        GH_TOKEN: "${{ inputs.token }}"
    - run: |
        git config --global user.email "${{inputs.user_email}}"
        git config --global user.name "${{inputs.user_name}}"
        git checkout -b "${{inputs.branch}}"
        git add .
        git commit -m "${{inputs.commit_message}}"
        git push --set-upstream origin "${{inputs.branch}}"
      shell: bash
      working-directory: "${{inputs.working_directory}}"
    - run:  gh pr create  --title="${{inputs.title}}" --body="${{inputs.body}}"
      shell: bash
      working-directory: "${{inputs.working_directory}}"
      env:
        GH_TOKEN: "${{ inputs.token }}"
    - run: echo "PR_URL ${{ steps.pr.outputs.pr-url }}"
      shell: bash
    - run: gh pr merge "${{inputs.branch}}" --squash --delete-branch
      shell: bash
      working-directory: "${{inputs.working_directory}}"
      env:
        GH_TOKEN: "${{ inputs.token }}"
    - id: downstream_tag
      shell: bash
      run: echo "::set-output name=bumped::$(go run ${{ github.action_path }}bump.go $(git describe --abbrev=0 --tags || echo "v0.0.0") patch)"
      working-directory: "${{inputs.working_directory}}"
    - run: gh release create "${{steps.downstream_tag.outputs.bumped}}" --notes "${{inputs.body}}"
      shell: bash
      working-directory: "${{inputs.working_directory}}"
      env:
        GH_TOKEN: "${{ inputs.token }}"
