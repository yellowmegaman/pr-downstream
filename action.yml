name: 'pr-downstream'
description: 'Create and merge downstream PR'
inputs:
  repo:
    description: 'Repo to create PR'
    required: false
    default: 'worldr/gitops'
  target_branch:
    description: 'Branch to merge pr in'
    required: false
    default: "main"
  pr_branch:
    description: 'Branch to create pr from'
    required: false
    default: "main"
  change:
    description: 'What do we want to change in target repo'
    required: true
  merge:
    description: 'Do we want to merge the PR?'
    required: false
    default: "true"
  title:
    description: 'PR title'
    required: true
  label:
    description: 'PR label'
    required: false
    default: "automation"
  working_directory:
    description: "Target repo local path"
    required: false
    default: pr-donwstream-tmp
  user_name:
    description: "Git user.name value"
    required: false
    default: "ci"
  user_email:
    description: "Git user.email"
    required: false
    default: "ci@cd.automation"
  commit_message:
    description: "Commit message for auto commit"
    required: false
    default: "auto-commit"
runs:
  using: "composite"
  steps:
    - run:  gh auth status
      shell: bash
    - run: |
        git config --global credential.https://github.com.helper ''
        git config --global --add credential.https://github.com.helper '!'$(which gh)' auth git-credential'
      shell: bash
    - run: gh repo clone worldr/gitops -- "${{inputs.working_directory}}" -b "${{inputs.target_branch}}"
      shell: bash
    - run:  ${{ inputs.change }}
      shell: bash
      working-directory: "${{inputs.working_directory}}"
    - run: |
        git config --global user.email "${{inputs.user_email}}"
        git config --global user.name "${{inputs.user_name}}"
        git checkout -b "${{inputs.pr_branch}}"
        git add .
        git commit -m "${{inputs.commit_message}}"
        git push --set-upstream origin "${{inputs.pr_branch}}"
      shell: bash
      working-directory: "${{inputs.working_directory}}"
    - id: changelog
      run: |
        git fetch --depth=100
        changelog=$(echo -e "$GITHUB_REPOSITORY updated to $(git describe --abbrev=0 --tags)\n$(git --no-pager log $(git describe --abbrev=0 --tags $(git describe --abbrev=0 --tags)^)..$(git describe --abbrev=0 --tags) --pretty=format:"%an %s" | sed 's,#,'$GITHUB_SERVER_URL'/'$GITHUB_REPOSITORY'/pull/,g')")
        changelog="${changelog//'%'/'%25'}"
        changelog="${changelog//$'\n'/'%0A'}"
        changelog="${changelog//$'\r'/'%0D'}"
        echo "::set-output name=changelog::$changelog"
      shell: bash
    - run:  gh pr create --base="${{inputs.target_branch}}" --title="${{inputs.title}}" --body="${{steps.changelog.outputs.changelog}}"
      shell: bash
      working-directory: "${{inputs.working_directory}}"
    - run: gh pr merge "${{inputs.pr_branch}}" --squash --delete-branch
      shell: bash
      working-directory: "${{inputs.working_directory}}"
    - id: downstream_tag
      shell: bash
      run: |
        git fetch --depth=100
        go get github.com/coreos/go-semver/semver
        echo "::set-output name=bumped::$(go run ${{ github.action_path }}/bump.go $(git describe --abbrev=0 --tags || echo "v0.0.0") patch)"
      working-directory: "${{inputs.working_directory}}"
      env:
        GO111MODULE: auto
    - run: echo "${{steps.changelog.outputs.changelog}}"
      shell: bash
    - run: gh release create "${{steps.downstream_tag.outputs.bumped}}" --notes "${{steps.changelog.outputs.changelog}}"
      shell: bash
      working-directory: "${{inputs.working_directory}}"
